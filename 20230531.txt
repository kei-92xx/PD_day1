프로그램 언어의 역사 
1세대  : 기계어, 어셈블리어    : 동굴, 움집 
                         4bit
           128  64   32 16  8   4  2 1
          4bit가 저장할 수 있는 최고값 1111 ~ 0000 (15~0)

           4 + 5   => 0100     0101     + 0001

          0100 0101 0001 => 4 5 1

         + add         4 5 add  => 번역 => 0100 0101 0001  어셈블리어 (어셈블러)

         
2세대 : 자연어(사람의 말에 가깝게) , 계산용(포트란)-원자력발전소, 데이터처리용 언어(코볼)-은행 : 기와집,초가집
          솜씨 좋은 사람들이 대충 만들고 쓰다가 수정할 일이 생김 , 컴파일러 

3세대 : 구조적 프로그래밍 언어 (소프트웨어공학) - 개발을 정해진 방식으로 하자 , 5층이내 양옥집(엘리베이터) 
          C,알고리즘, 절차, 과정중심        전기나 수도같은 배관, 설계도    컴파일러                                                       

4세대 : 객체지향 언어 - c++, java, 파이썬 
          부품을 미리 많이 만들자  그리고 부품을 연결해서 프로그램을 작성하자 (컴파일러)
     
         컴파일러 - 언어를 번역해서 기계어로 만들어주는 프로그램, 전체를 번역해서 문제가 없으면 가동 
        인터프리터  - 언어를 번역해서 기계어로 만들어주는 프로그램, 한줄읽어서 번역해서 한줄실행 
                           (파이썬), 교육용 언어라는 인식이 강했는데 파이썬, nodejs 
                         
       파이썬은 인터프리터 언어 



C:\ProgramData\anaconda3
C:\ProgramData\anaconda3\Lib
C:\ProgramData\anaconda3\Scripts

데이터 타입 - 차지하는 메모리 크기와 저장방식이 서로 다르다
정수타입  : 10진수 -> 2진수 바꾸어서 저장한다 
                음수를 어떻게 할까?  
	 1) 부호의 양의정수                     8bit컴퓨터의 경우   음수 
                첫번째 비트를 부호로 사용하고    0000 0001            1000  0001 
               2) 1의 보수로 쓰자( 0->1 , 1->0) 
                                                             0000 0001            0111 1110
               3) 2의보수(1의 보수 + 1)
                                                             0000 0001            0111 1111 

              1 + 1 = 2
              1 + (-1) = 0

	0000 0001
 	0111 1111
-----------------------------
            10000 0000              마지막남은 비트 하나는 버린다.  0  
            1 * 10의 15승 
실수타입  - 가수부와 지수부   1  15승 따로 저장하고  
문자열 - unicode 가 표준 "" 나 '' 쓰고 안에 내용을 쓰면 문자열로 인식한다 

자바의 예, 데이터타입을 지정하고 변수를 선언해야만 한다 - 컴파일러언어의 특징  
int a;
float b;

파이썬, 아무 값이나 저장가능, 변수는 필요할때마다 대충 값넣고 쓰면 된다. 
a = 6 
a = 4.5
a = "문자열" 


















